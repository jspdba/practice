<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="top.wuchaofei.auth.MyHashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="myShiro" class="top.wuchaofei.auth.MyShiro">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!-- 配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- ref对应我们写的realm  MyShiro -->
        <property name="realm" ref="myShiro"/>
        <!-- 使用下面配置的缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
    </bean>


    <!-- 凭证匹配器 -->
    <!--<bean id="credentialsMatcher" class="top.wuchaofei.auth.MyHashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>-->

    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 调用我们配置的权限管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 配置我们的登录请求地址 -->
        <property name="loginUrl" value="/user/login"/>
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->
        <property name="successUrl" value="/"/>
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->
        <property name="unauthorizedUrl" value="/403.jsp"/>

        <!--自定义权限过滤器-->
        <property name="filters">
            <!--<map>
                <entry key="anyRoles" value-ref="anyRoles"/>
            </map>-->
            <map>
                <!--<entry key="authc" value-ref="formAuthenticationFilter" />-->
                <entry key="kaptcha" value-ref="kaptchaFilter" />
                <entry key="anyRoles" value-ref="anyRoles"/>
            </map>
        </property>
        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示此地址不需要任何权限即可访问 -->
                /static/**=anon
                /user/login*=kaptcha
                /user/logout*=anon
                /403*=anon
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->
                <!--/tinker/**=perms["admin,tinker:admin"]
                /channel/**=perms["admin,tinker:admin"]
                /domainCheck/**=perms["admin,domain:admin"]
                /auth/**=perms["admin,auth:admin"]-->
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->
                <!--/tinker/**=authc,anyRoles[admin,tinker:admin]
                /channel/**=authc,anyRoles[admin,tinker:admin]
                /domainCheck/**=authc,anyRoles[admin,domain:admin]
                /auth/**=authc,anyRoles[admin,auth:admin]-->
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login-->
                /** = authc
            </value>
        </property>
    </bean>

    <!--自定义的Roles Filter-->
    <bean id="anyRoles" class="top.wuchaofei.auth.RolesAuthorizationFilter" />
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />




    <!-- 基于Form表单的身份验证过滤器 -->
    <!--<bean id="formAuthenticationFilter" class="top.wuchaofei.filter.KaptchaFormAuthenticationFilter">
        <property name="usernameParam" value="username" />
        <property name="passwordParam" value="password" />
        <property name="rememberMeParam" value="rememberMe" />
        <property name="loginUrl" value="/user/login" />
        <property name="successUrl" value="/"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
    </bean>-->
    <!-- 验证码的过滤器 -->
    <bean id="kaptchaFilter" class="top.wuchaofei.filter.KaptchaFilter">
        <property name="captchaEbabled" value="true"/>
        <property name="kaptchaParam" value="kaptcha" />
    </bean>

</beans>