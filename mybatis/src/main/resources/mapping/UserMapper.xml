<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.wuchaofei.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="top.wuchaofei.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="top.wuchaofei.domain.User" extends="BaseResultMap" >
    <result column="avatar" property="avatar" jdbcType="LONGVARCHAR" />
  </resultMap>

  <resultMap id="PagerResultMap" type="top.wuchaofei.domain.User" extends="ResultMapWithBLOBs" >
    <result column="avatar" property="avatar" jdbcType="LONGVARCHAR" />
    <collection property="roleList" ofType="top.wuchaofei.domain.Role" column="id" select="top.wuchaofei.mapper.RoleMapper.selectByUserId"></collection>
  </resultMap>

  <sql id="Base_Column_List" >
    id, token, username, password, mobile, status, mail, create_date, modify_date
  </sql>
  <sql id="Blob_Column_List" >
    avatar
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <resultMap id="FindUserResultMap" type="top.wuchaofei.domain.User" extends="ResultMapWithBLOBs" >
    <collection property="roleList" column="id" select="top.wuchaofei.mapper.RoleMapper.selectRoleListByUserId" />
  </resultMap>

  <select id="findUserByName" resultMap="FindUserResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    WHERE
    username = #{username ,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.wuchaofei.domain.User" >
    insert into user (id, token, username,
    password, mobile, status,
    mail, create_date, modify_date,
    avatar)
    values (#{id,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
    #{mail,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP},
    #{avatar,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.wuchaofei.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.wuchaofei.domain.User" >
    update user
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.wuchaofei.domain.User" >
    update user
    set token = #{token,jdbcType=VARCHAR},
    username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    mobile = #{mobile,jdbcType=VARCHAR},
    status = #{status,jdbcType=BIT},
    mail = #{mail,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    modify_date = #{modifyDate,jdbcType=TIMESTAMP},
    avatar = #{avatar,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.wuchaofei.domain.User" >
    update user
    set token = #{token,jdbcType=VARCHAR},
    username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    mobile = #{mobile,jdbcType=VARCHAR},
    status = #{status,jdbcType=BIT},
    mail = #{mail,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByEntry" resultMap="ResultMapWithBLOBs" parameterType="top.wuchaofei.domain.User">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <where>
      <if test="id != null" >
        id=#{id,jdbcType=INTEGER}
      </if>
      <if test="token != null" >
        and token = #{token,jdbcType=VARCHAR}
      </if>
      <if test="username != null" >
        and username = #{username,jdbcType=VARCHAR}
      </if>
      <if test="password != null" >
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="mobile != null" >
        and and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=BIT}
      </if>
      <if test="mail != null" >
        and mail = #{mail,jdbcType=VARCHAR}
      </if>
      <if test="avatar != null" >
        and avatar = #{avatar,jdbcType=LONGVARCHAR}
      </if>
    </where>
    ORDER BY create_date DESC
    limit 1
  </select>

  <select id="selectByRoleId" parameterType="int" resultMap="ResultMapWithBLOBs">
    select u.* from user u
    INNER JOIN user_role ur on u.id = ur.user_id
    INNER JOIN role r on r.id = ur.role_id
    WHERE u.id = #{id}
  </select>

  <select id="listByPager" parameterType="java.util.Map" resultMap="PagerResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <if test="orderByClause != null">
      ORDER BY ${orderByClause}
    </if>
    <if test="orderByClause == null">
      ORDER BY id
    </if>
    limit #{start},#{limit}
  </select>
  <select id="getTotalByPager" resultType="java.lang.Long" parameterType="java.util.Map">
    SELECT count(1) FROM user
  </select>
</mapper>